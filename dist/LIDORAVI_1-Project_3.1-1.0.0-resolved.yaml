---
openapi: 3.0.0
info:
  title: Recipes API by Reut and Lidor
  description: This is API for a recipes website where you can watch and create different recipes.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/LIDORAVI_1/Project_3.1/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: user
  description: the users in the system
- name: recipes
  description: the recipes in the systems
paths:
  /register:
    post:
      tags:
      - user
      summary: adds a user
      description: Adds a user to the system
      operationId: addUser
      requestBody:
        description: User to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: user added successfully
        "409":
          description: an existing user already exists
  /login:
    post:
      tags:
      - user
      summary: Logs a user to the system
      description: Logs a user to the system
      operationId: loginUser
      requestBody:
        description: username and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
        required: true
      responses:
        "201":
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "404":
          description: Username not found
        "401":
          description: Incorrect password
  /createRecipe:
    post:
      tags:
      - recipes
      summary: Create a new recipe
      description: Adds a new recipe to the system
      operationId: createRecipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRecipe_body'
        required: true
      responses:
        "201":
          description: Recipe created successfully
  /generalRandomRecipes:
    get:
      tags:
      - recipes
      summary: array with 3 random recipes
      responses:
        "200":
          description: 3 random recipes
          content:
            application/json:
              schema:
                maxItems: 3
                minItems: 3
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
  /userHomePageRecipes/{userName}:
    get:
      tags:
      - user
      summary: returns 3 recipes of user's recipes
      parameters:
      - name: userName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: reutme
      responses:
        "201":
          description: 3 random user's recipes
          content:
            application/json:
              schema:
                maxItems: 3
                minItems: 3
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
  /userFavoriteRecipes/{userName}:
    get:
      tags:
      - user
      summary: returns user's favorite recipes
      parameters:
      - name: userName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: reutme
      responses:
        "201":
          description: user's favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
    put:
      tags:
      - recipes
      summary: Add a recipe to a user favorites list
      parameters:
      - name: userName
        in: path
        description: The username
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recipeId
        in: query
        description: The ID of the recipe
        required: true
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: Recipe added to the user's favorites list successfully
  /userPersonalRecipes/{userName}:
    get:
      tags:
      - recipes
      summary: returns user's personal recipes
      parameters:
      - name: userName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: reutme
      responses:
        "201":
          description: user's personal recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
  /userFamilyRecipes/{userName}:
    get:
      tags:
      - recipes
      summary: returns user's family recipes
      parameters:
      - name: userName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: reutme
      responses:
        "201":
          description: user's family recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FamilyRecipe'
  /userLastViewedRecipes/{userName}:
    get:
      tags:
      - recipes
      summary: get seen recipes
      parameters:
      - name: userName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: reutme
      responses:
        "201":
          description: get seen recipes of user
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    put:
      tags:
      - recipes
      summary: update seen recipes
      parameters:
      - name: userName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: reutme
      - name: recipeID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: number
          example: 123456
      responses:
        "201":
          description: update seen recipe to user
components:
  schemas:
    User:
      required:
      - country
      - email
      - firstName
      - lastName
      - password
      - passwordConfirmation
      - userName
      type: object
      properties:
        userName:
          maxLength: 8
          minLength: 3
          pattern: "^[A-Za-z]+$"
          type: string
          example: LidorAvi
        firstName:
          type: string
          example: Lidor
        lastName:
          type: string
          example: Avital
        country:
          type: string
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          pattern: "^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{5,10}$"
          type: string
          example: Lidor!1
        passwordConfirmation:
          type: string
          example: Lidor!1
        email:
          type: string
          format: email
          example: lidor@gmail.com
        lastViewedList:
          type: array
          items:
            type: string
        myFavoriteList:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
        myRecipesList:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
        myFamilyRecipesList:
          type: array
          items:
            $ref: '#/components/schemas/FamilyRecipe'
    Recipe:
      required:
      - Instructions
      - amountOfLike
      - amountOfPortions
      - image
      - ingredients
      - isGlutenFree
      - isVegan\Vegetarian
      - prepareTime
      - recipeID
      - recipeName
      type: object
      properties:
        recipeID:
          type: number
          example: 123456
        recipeName:
          type: string
          example: cheese cake
        image:
          type: object
          format: jpg
        prepareTime:
          type: string
          example: 30 minutes
        amountOfLike:
          type: number
          example: 245
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/ingredients'
        isVegan\Vegetarian:
          type: number
        isGlutenFree:
          type: boolean
          example: true
        Instructions:
          type: array
          items:
            $ref: '#/components/schemas/Instructions'
        amountOfPortions:
          type: number
          example: 10
    Instructions:
      properties:
        step:
          type: string
          example: add 4 spoon of sugar
    ingredients:
      required:
      - ingredientName
      - ingredientamount
      type: object
      properties:
        ingredientName:
          type: string
          example: sugar
        ingredientamount:
          type: string
          example: 0.5 glass
    FamilyRecipe:
      required:
      - recipe
      - recipeOwner
      - whenIsItUsuallyPrepared
      properties:
        recipe:
          $ref: '#/components/schemas/Recipe'
        recipeOwner:
          type: string
          example: Ronen
        whenIsItUsuallyPrepared:
          type: string
          example: New Year 1
    login_body:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
    inline_response_201:
      type: object
      properties:
        status:
          type: string
        userName:
          type: string
    createRecipe_body:
      type: object
      properties:
        userName:
          type: string
        recipe:
          $ref: '#/components/schemas/Recipe'
